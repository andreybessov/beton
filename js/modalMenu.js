function initModal() {
  const modal = document.getElementById("callbackModal");
  const modalClose = document.getElementById("modalClose");
  const form = document.getElementById("feedbackForm");

  if (!modal || !modalClose || !form) return;

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–Ω–æ–ø–∫–µ
  modalClose.addEventListener("click", () => {
    modal.classList.remove("modal--active");
  });

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ —Ñ–æ–Ω—É
  modal.addEventListener("click", (e) => {
    if (e.target === modal || e.target.classList.contains("modal__overlay")) {
      modal.classList.remove("modal--active");
    }
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã
  form.addEventListener("submit", function (e) {
    e.preventDefault();

    const formData = new FormData(form);

    fetch("https://script.google.com/macros/s/AKfycbzpgVb0HowifEgS6SifBV1p4OuUCKCZNTY9Xq3GVJjHQb88CDu28K6ElEfz76T8Pug8/exec", {
      method: "POST",
      body: formData,
    })
    .then((response) => {
      if (response.ok) {
        alert("–§–æ—Ä–º–∞ —É—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–∞!");
        form.reset();
        modal.classList.remove("modal--active");
      } else {
        alert("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ —Ñ–æ—Ä–º–∏!");
      }
    })
    .catch((error) => {
      console.error("Error:", error);
      alert("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞.");
    });
  });

  // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∫–∏
  const openModalBtns = [
    document.getElementById("catalogLink"),
    ...document.querySelectorAll(".aboutUs-section__button"),
  ];

  openModalBtns.forEach((btn) => {
    if (btn) {
      btn.addEventListener("click", (e) => {
        e.preventDefault();
        modal.classList.add("modal--active");
      });
    }
  });
}

document.addEventListener("DOMContentLoaded", () => {
  const mainContainer = document.querySelector("main");

  function scrollToHash(hash) {
    if (!hash) return;
    const target = document.querySelector(hash);
    if (target) {
      target.scrollIntoView({ behavior: "smooth" });
    }
  }

  function loadPage(url, addToHistory = true) {
    const [path, hash] = url.split("#");

    fetch(path)
      .then(response => {
        if (!response.ok) throw new Error("Page load error");
        return response.text();
      })
      .then(html => {
        const parser = new DOMParser();
        const doc = parser.parseFromString(html, "text/html");
        const newMain = doc.querySelector("main");

        if (newMain) {
          mainContainer.innerHTML = newMain.innerHTML;

          if (addToHistory) {
            history.pushState({ html: newMain.innerHTML, url }, "", url);
          }

          requestAnimationFrame(() => {
            if (hash) {
              scrollToHash("#" + hash);
            } else {
              window.scrollTo({ top: 0 });
            }
          });

          // üí° –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–∞–ª–∫–∏ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
          initModal();
        }
      })
      .catch(err => {
        console.error(err);
        alert("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.");
      });
  }

  // –ö–ª–∏–∫ –ø–æ —Å—Å—ã–ª–∫–∞–º
  document.body.addEventListener("click", e => {
    const link = e.target.closest("a[href]");
    if (!link) return;

    const href = link.getAttribute("href");
    if (!href || href.startsWith("mailto:") || href.startsWith("tel:")) return;

    const linkURL = new URL(href, location.origin);
    if (linkURL.origin !== location.origin) return;

    if (href.startsWith("#")) return;

    if (href.endsWith(".html") || href.includes(".html#")) {
      e.preventDefault();
      loadPage(href);
    }
  });

  // –ù–∞–∑–∞–¥/–≤–ø–µ—Ä–µ–¥ –≤ –±—Ä–∞—É–∑–µ—Ä–µ
  window.addEventListener("popstate", e => {
    if (e.state?.html) {
      mainContainer.innerHTML = e.state.html;
      const hash = location.hash;
      if (hash) {
        requestAnimationFrame(() => scrollToHash(hash));
      } else {
        window.scrollTo({ top: 0 });
      }

      initModal(); // üí° –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Å–ª–µ popstate
    } else {
      loadPage(location.pathname + location.hash, false);
    }
  });

  // –ü–µ—Ä–≤–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
  history.replaceState(
    { html: mainContainer.innerHTML, url: location.href },
    "",
    location.href
  );

  initModal(); // üí° –ü–µ—Ä–≤–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–∞–ª–∫–∏
});
